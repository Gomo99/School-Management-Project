// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolProject.Data;

#nullable disable

namespace SchoolProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250823124658_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolProject.Models.Account", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ResetPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPinExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@school.com",
                            Name = "Admin",
                            Password = "admin123",
                            Role = "Administrator",
                            Surname = "User",
                            Title = "System Admin",
                            UserStatus = "Active"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "lecturer@school.com",
                            Name = "lECTURE",
                            Password = "admin123",
                            Role = "Lecturer",
                            Surname = "User",
                            Title = "System Lecturer",
                            UserStatus = "Active"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "student@school.com",
                            Name = "Student",
                            Password = "admin123",
                            Role = "Student",
                            Surname = "User",
                            Title = "System Student",
                            UserStatus = "Active"
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.Assessment", b =>
                {
                    b.Property<int>("AssessmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentID"));

                    b.Property<string>("AssessmentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssessmentTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentModuleID")
                        .HasColumnType("int");

                    b.HasKey("AssessmentID");

                    b.HasIndex("AssessmentTypeID");

                    b.HasIndex("StudentModuleID");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("SchoolProject.Models.AssessmentType", b =>
                {
                    b.Property<int>("AssessmentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentTypeID"));

                    b.Property<string>("AssessmentTypeDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AssessmentTypeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssessmentTypeID");

                    b.ToTable("assessmentTypes");

                    b.HasData(
                        new
                        {
                            AssessmentTypeID = 1,
                            AssessmentTypeDescription = "Formal written examination",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 2,
                            AssessmentTypeDescription = "Short knowledge test",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 3,
                            AssessmentTypeDescription = "Practical or theoretical work assignment",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 4,
                            AssessmentTypeDescription = "Extended practical project work",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 5,
                            AssessmentTypeDescription = "Oral presentation of work",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 6,
                            AssessmentTypeDescription = "Hands-on practical assessment",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 7,
                            AssessmentTypeDescription = "Analysis of real-world scenarios",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 8,
                            AssessmentTypeDescription = "Collection of work samples",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 9,
                            AssessmentTypeDescription = "Scientific laboratory report",
                            AssessmentTypeStatus = "Active"
                        },
                        new
                        {
                            AssessmentTypeID = 10,
                            AssessmentTypeDescription = "Academic research paper",
                            AssessmentTypeStatus = "Active"
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.LecturerModule", b =>
                {
                    b.Property<int>("LecturerModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerModuleID"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModLecturerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("LecturerModuleID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("LecturerModules");
                });

            modelBuilder.Entity("SchoolProject.Models.Module", b =>
                {
                    b.Property<int>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleID"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModuleStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleID");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            ModuleID = 1,
                            Duration = 12,
                            ModuleName = "Mathematics 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 2,
                            Duration = 14,
                            ModuleName = "Physics 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 3,
                            Duration = 15,
                            ModuleName = "Chemistry 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 4,
                            Duration = 10,
                            ModuleName = "Biology 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 5,
                            Duration = 16,
                            ModuleName = "Computer Science 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 6,
                            Duration = 12,
                            ModuleName = "English Literature",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 7,
                            Duration = 18,
                            ModuleName = "History 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 8,
                            Duration = 12,
                            ModuleName = "Philosophy 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 9,
                            Duration = 12,
                            ModuleName = "Psychology 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 10,
                            Duration = 14,
                            ModuleName = "Sociology 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 11,
                            Duration = 12,
                            ModuleName = "Political Science 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 12,
                            Duration = 16,
                            ModuleName = "Economics 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 13,
                            Duration = 13,
                            ModuleName = "Geography 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 14,
                            Duration = 20,
                            ModuleName = "Engineering 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 15,
                            Duration = 12,
                            ModuleName = "Law 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 16,
                            Duration = 18,
                            ModuleName = "Medicine 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 17,
                            Duration = 14,
                            ModuleName = "Nursing 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 18,
                            Duration = 14,
                            ModuleName = "Business Management 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 19,
                            Duration = 12,
                            ModuleName = "Accounting 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 20,
                            Duration = 13,
                            ModuleName = "Marketing 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 21,
                            Duration = 12,
                            ModuleName = "Design 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 22,
                            Duration = 12,
                            ModuleName = "Art 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 23,
                            Duration = 14,
                            ModuleName = "Music 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 24,
                            Duration = 13,
                            ModuleName = "Theater 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 25,
                            Duration = 12,
                            ModuleName = "Dance 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 26,
                            Duration = 24,
                            ModuleName = "Architecture 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 27,
                            Duration = 15,
                            ModuleName = "Physics 201",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 28,
                            Duration = 12,
                            ModuleName = "Statistics 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 29,
                            Duration = 14,
                            ModuleName = "Data Science 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 30,
                            Duration = 16,
                            ModuleName = "Artificial Intelligence 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 31,
                            Duration = 14,
                            ModuleName = "Machine Learning 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 32,
                            Duration = 16,
                            ModuleName = "Cloud Computing 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 33,
                            Duration = 16,
                            ModuleName = "Cyber Security 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 34,
                            Duration = 12,
                            ModuleName = "Networking 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 35,
                            Duration = 15,
                            ModuleName = "Database Management 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 36,
                            Duration = 14,
                            ModuleName = "Web Development 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 37,
                            Duration = 14,
                            ModuleName = "Game Development 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 38,
                            Duration = 15,
                            ModuleName = "Cloud Architecture 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 39,
                            Duration = 18,
                            ModuleName = "Blockchain 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 40,
                            Duration = 12,
                            ModuleName = "Digital Marketing 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 41,
                            Duration = 13,
                            ModuleName = "Human Resources 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 42,
                            Duration = 14,
                            ModuleName = "Project Management 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 43,
                            Duration = 15,
                            ModuleName = "Operations Management 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 44,
                            Duration = 12,
                            ModuleName = "Entrepreneurship 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 45,
                            Duration = 12,
                            ModuleName = "Public Relations 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 46,
                            Duration = 13,
                            ModuleName = "Leadership 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 47,
                            Duration = 14,
                            ModuleName = "Sustainability 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 48,
                            Duration = 12,
                            ModuleName = "Logistics 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        },
                        new
                        {
                            ModuleID = 49,
                            Duration = 16,
                            ModuleName = "Supply Chain Management 101",
                            ModuleStatus = "Active",
                            ModuleType = "Core"
                        },
                        new
                        {
                            ModuleID = 50,
                            Duration = 15,
                            ModuleName = "Business Analytics 101",
                            ModuleStatus = "Active",
                            ModuleType = "Elective"
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.StudentModule", b =>
                {
                    b.Property<int>("StudentModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentModuleID"));

                    b.Property<int?>("AccountUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LecturerModuleID")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleID")
                        .HasColumnType("int");

                    b.Property<string>("StudModStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("StudentModuleID");

                    b.HasIndex("AccountUserID");

                    b.HasIndex("LecturerModuleID");

                    b.HasIndex("ModuleID");

                    b.HasIndex("UserID");

                    b.ToTable("StudentModules");
                });

            modelBuilder.Entity("SchoolProject.Models.Assessment", b =>
                {
                    b.HasOne("SchoolProject.Models.AssessmentType", "AssessmentType")
                        .WithMany()
                        .HasForeignKey("AssessmentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolProject.Models.StudentModule", "StudentModule")
                        .WithMany()
                        .HasForeignKey("StudentModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessmentType");

                    b.Navigation("StudentModule");
                });

            modelBuilder.Entity("SchoolProject.Models.LecturerModule", b =>
                {
                    b.HasOne("SchoolProject.Models.Module", "Module")
                        .WithMany("LecturerModules")
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolProject.Models.Account", "Lecturer")
                        .WithMany("LecturerModules")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("SchoolProject.Models.StudentModule", b =>
                {
                    b.HasOne("SchoolProject.Models.Account", null)
                        .WithMany("StudentModules")
                        .HasForeignKey("AccountUserID");

                    b.HasOne("SchoolProject.Models.LecturerModule", "LecturerModule")
                        .WithMany()
                        .HasForeignKey("LecturerModuleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SchoolProject.Models.Module", null)
                        .WithMany("StudentModules")
                        .HasForeignKey("ModuleID");

                    b.HasOne("SchoolProject.Models.Account", "Student")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LecturerModule");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolProject.Models.Account", b =>
                {
                    b.Navigation("LecturerModules");

                    b.Navigation("StudentModules");
                });

            modelBuilder.Entity("SchoolProject.Models.Module", b =>
                {
                    b.Navigation("LecturerModules");

                    b.Navigation("StudentModules");
                });
#pragma warning restore 612, 618
        }
    }
}
