@model SchoolProject.ViewModel.RecoveryLoginViewModel

@{
    ViewData["Title"] = "Recovery Code Login";
}

<div class="min-vh-100 d-flex align-items-center justify-content-center bg-gradient-primary py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-6 col-md-8 col-sm-12">
                <!-- Header Section -->
                <div class="text-center mb-4">
                    <div class="bg-white p-3 rounded-circle shadow-sm d-inline-flex mb-3">
                        <i class="bi bi-key-fill text-primary fs-2"></i>
                    </div>
                    <h1 class="h2 fw-bold text-white mb-2">Recovery Code Access</h1>
                    <p class="text-white-50">Use your backup recovery code to access your account</p>
                </div>

                <!-- Main Card -->
                <div class="card border-0 shadow-lg rounded-4">
                    <div class="card-header bg-transparent py-4 border-bottom text-center">
                        <h3 class="card-title mb-0 text-dark">
                            <i class="bi bi-shield-exclamation text-warning me-2"></i>Enter Recovery Code
                        </h3>
                    </div>

                    <div class="card-body p-5">
                        <!-- Information Alert -->
                        <div class="alert alert-warning border-0 rounded-3 mb-4">
                            <div class="d-flex">
                                <i class="bi bi-exclamation-triangle-fill text-warning me-2 fs-5"></i>
                                <div>
                                    <h6 class="alert-heading mb-1">Important Security Notice</h6>
                                    <p class="mb-0 small">Each recovery code can only be used once. After use, it will be permanently removed from your account.</p>
                                </div>
                            </div>
                        </div>

                        <form asp-action="RecoveryLogin" method="post" class="needs-validation" novalidate>
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3"></div>

                            <!-- Recovery Code Input -->
                            <div class="mb-4">
                                <label asp-for="RecoveryCode" class="form-label fw-semibold text-dark mb-3">
                                    <i class="bi bi-backup text-primary me-1"></i>Recovery Code
                                </label>
                                <div class="input-group input-group-lg">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="bi bi-key text-primary"></i>
                                    </span>
                                    <input asp-for="RecoveryCode"
                                           class="form-control form-control-lg border-start-0 py-3"
                                           placeholder="Enter your 16-character recovery code"
                                           required
                                           pattern="[A-Z0-9]{16}"
                                           maxlength="16"
                                           autocomplete="one-time-code" />
                                    <button type="button" class="input-group-text bg-light border-start-0" id="toggleRecoveryCode">
                                        <i class="bi bi-eye-fill text-muted"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="RecoveryCode" class="text-danger small mt-2"></span>
                                <div class="form-text text-muted mt-2">
                                    <i class="bi bi-info-circle me-1"></i>Enter one of your unused 16-character recovery codes
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <button type="submit" class="btn btn-warning btn-lg w-100 rounded-3 py-3 mb-4 fw-semibold">
                                <i class="bi bi-unlock-fill me-2"></i>Verify Recovery Code
                                <span class="spinner-border spinner-border-sm ms-2 d-none" role="status"></span>
                            </button>
                        </form>

                        <!-- Alternative Options -->
                        <div class="text-center">
                            <p class="text-muted mb-3">Other options</p>
                            <div class="d-grid gap-2">
                                <a asp-action="VerificationCodeLogin" class="btn btn-outline-primary rounded-3">
                                    <i class="bi bi-phone-fill me-2"></i>Use Authenticator App
                                </a>
                                <a asp-action="Login" class="btn btn-link text-decoration-none text-muted">
                                    <i class="bi bi-arrow-left me-1"></i>Back to Main Login
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Help Section -->
                <div class="card border-0 shadow-sm mt-4 rounded-4">
                    <div class="card-body text-center">
                        <h6 class="text-dark mb-3">
                            <i class="bi bi-question-circle text-primary me-2"></i>Need Help?
                        </h6>
                        <div class="d-flex justify-content-center gap-3">
                            <a href="#" class="btn btn-sm btn-outline-secondary rounded-pill">
                                <i class="bi bi-envelope me-1"></i>Support
                            </a>
                            <a href="#" class="btn btn-sm btn-outline-secondary rounded-pill">
                                <i class="bi bi-file-text me-1"></i>Help Guide
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Security Badge -->
                <div class="text-center mt-4">
                    <div class="d-inline-flex align-items-center bg-white bg-opacity-25 rounded-pill px-3 py-2">
                        <i class="bi bi-shield-check text-success me-2"></i>
                        <small class="text-white">Protected by advanced security measures</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

    <style>
        .min-vh-100 {
            min-height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .card {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.98);
        }

        .input-group {
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
            border-radius: 0.75rem;
            overflow: hidden;
            transition: all 0.3s ease;
        }

            .input-group:focus-within {
                box-shadow: 0 4px 20px rgba(255, 193, 7, 0.3);
                transform: translateY(-2px);
            }

        .form-control {
            border-left: none !important;
            border-right: none !important;
            font-family: 'Courier New', monospace;
            letter-spacing: 1px;
            font-weight: 600;
        }

        .btn-warning {
            background: linear-gradient(45deg, #ffc107, #ff9800);
            border: none;
            color: #000;
            transition: all 0.3s ease;
        }

            .btn-warning:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(255, 193, 7, 0.4);
                background: linear-gradient(45deg, #ff9800, #ffc107);
            }

        .alert {
            border: none;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .input-group-text {
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .input-group-text:hover {
                background-color: #e9ecef;
            }

        .form-check-input:checked {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        .text-white-50 {
            color: rgba(255, 255, 255, 0.8) !important;
        }
    </style>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('.needs-validation');
            const submitButton = form.querySelector('button[type="submit"]');
            const spinner = submitButton.querySelector('.spinner-border');
            const recoveryCodeInput = document.getElementById('RecoveryCode');
            const toggleButton = document.getElementById('toggleRecoveryCode');

            // Auto-focus on input
            if (recoveryCodeInput) {
                recoveryCodeInput.focus();
            }

            // Toggle password visibility
            if (toggleButton && recoveryCodeInput) {
                toggleButton.addEventListener('click', function() {
                    const type = recoveryCodeInput.type === 'password' ? 'text' : 'password';
                    recoveryCodeInput.type = type;
                    toggleButton.querySelector('i').classList.toggle('bi-eye-fill');
                    toggleButton.querySelector('i').classList.toggle('bi-eye-slash-fill');
                });
            }

            // Auto-format recovery code (uppercase, remove spaces)
            if (recoveryCodeInput) {
                recoveryCodeInput.addEventListener('input', function(e) {
                    this.value = this.value.toUpperCase().replace(/[^A-Z0-9]/g, '');
                    if (this.value.length > 16) {
                        this.value = this.value.slice(0, 16);
                    }

                    // Add spacing for better readability (every 4 characters)
                    const value = this.value.replace(/\s/g, '');
                    if (value.length > 4) {
                        this.value = value.replace(/(.{4})/g, '$1 ').trim();
                    }
                });

                recoveryCodeInput.addEventListener('keydown', function(e) {
                    // Allow only alphanumeric characters and navigation keys
                    if (!/^[a-zA-Z0-9]$/.test(e.key) &&
                        !['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab'].includes(e.key)) {
                        e.preventDefault();
                    }
                });
            }

            // Form submission handling
            form.addEventListener('submit', function(e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                } else {
                    // Show loading spinner
                    submitButton.disabled = true;
                    spinner.classList.remove('d-none');

                    // Remove spaces before submission
                    if (recoveryCodeInput) {
                        recoveryCodeInput.value = recoveryCodeInput.value.replace(/\s/g, '');
                    }
                }

                form.classList.add('was-validated');
            });
        });
    </script>
}